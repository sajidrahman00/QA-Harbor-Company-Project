import logging
from playwright.sync_api import Page, TimeoutError

class BasePage:
    """Base page object that all page objects inherit from."""
    
    def __init__(self, page: Page):
        self.page = page
        self.logger = logging.getLogger(__name__)
        self.base_url = "https://bdjobs.com"
    
    def navigate(self, path=""):
        """Navigate to a specific URL path."""
        url = f"{self.base_url}/{path}"
        self.logger.info(f"Navigating to: {url}")
        self.page.goto(url)
    
    def wait_for_page_load(self):
        """Wait for page to finish loading."""
        self.page.wait_for_load_state("networkidle")
    
    def get_title(self):
        """Get page title."""
        return self.page.title()
    
    def get_url(self):
        """Get current URL."""
        return self.page.url
    
    def take_screenshot(self, name):
        """Take a screenshot of the current page."""
        self.page.screenshot(path=f"screenshots/{name}.png")
    
    def is_element_visible(self, selector):
        """Check if an element is visible."""
        try:
            return self.page.is_visible(selector)
        except TimeoutError:
            return False

    def click(self, selector):
        """Click on an element."""
        self.page.click(selector)
    
    def fill(self, selector, text):
        """Fill a form field."""
        self.page.fill(selector, text)
    
    def select_option(self, selector, value):
        """Select an option from a dropdown."""
        self.page.select_option(selector, value)
    
    def wait_for_selector(self, selector, state="visible", timeout=10000):
        """Wait for an element to be in the specified state."""
        self.page.wait_for_selector(selector, state=state, timeout=timeout)